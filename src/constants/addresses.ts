import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0xd30c11e55Ce17FC305F48949F5DC5E8B76cD536b",
    SVERSE_ADDRESS: "0x069A2224A09f8208541bcFA1b27Af5EC9c5EEb1F",
    VERSE_ADDRESS: "0xB72ab6f7177bBb41eFcC17D817778d77460259F1",
    MIM_ADDRESS: "0xd586e7f844cea2f87f50152665bcbc2c279d8d70",
    STAKING_ADDRESS: "0x4daaD77801CB55616E6e7728248374de7D702E0b",
    STAKING_HELPER_ADDRESS: "0xf78844B35C5E622F6085A6f7B8c41D784e4a3FC5",
    VERSE_BONDING_CALC_ADDRESS: "0x970fA579FA01E56B6FCE4E8A91Bf81DD84b3B559",
    TREASURY_ADDRESS: "0x50862E119a56ff41c6d660128e072ADd7dEc837b",
    ZAPIN_ADDRESS: "0x9ABE63C5A2fBcd54c8bAec3553d326356a530cae", //"0xb98007C04f475022bE681a890512518052CE6104",
    WSVERSE_ADDRESS: "0xE6420ee02D2B61Bd8556E5F8a5197983ce51e1f1",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX) return AVAX_MAINNET;

    throw Error("Network don't support");
};
