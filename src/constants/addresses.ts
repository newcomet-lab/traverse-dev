import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0x78a9e536EBdA08b5b9EDbE5785C9D1D50fA3278C",
    SVERSE_ADDRESS: "0x097663A767aa2E47e95A40E6166b2fDe66C2cd7A",
    VERSE_ADDRESS: "0xe440cE9D9eB350dc21A8656674F8e8a317286187",
    MIM_ADDRESS: "0x130966628846BFd36ff31a822705796e8cb8C18D",
    STAKING_ADDRESS: "0x04441577f697ee81225cbeb6b26234fb27e76de1",
    STAKING_HELPER_ADDRESS: "0xc9a7008b48e6aad2f482e3c7a11994153c837335",
    VERSE_BONDING_CALC_ADDRESS: "0xafe42ba443ce3f6bc98611c2cd0ce6354a6072ca",
    TREASURY_ADDRESS: "0x84e29f05608bc96318d8d00b4d03162e3d1d4cd7",
    ZAPIN_ADDRESS: "0x9ABE63C5A2fBcd54c8bAec3553d326356a530cae", //"0xb98007C04f475022bE681a890512518052CE6104",
    WSVERSE_ADDRESS: "0x0da67235dD5787D67955420C84ca1cEcd4E5Bb3b",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX) return AVAX_MAINNET;

    throw Error("Network don't support");
};
